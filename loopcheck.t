
======================================Processing tests/10nw.t======================================
ERROR: you can't to enter CHAR to INT type.
======================================Processing tests/10w.t======================================
-OK-
(CODE
	(FUNC
		f1
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(ASS_STMT
						(REGULAR_ASS
							(ID
								a
							)
							(INT
								9
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						INT
						(ASS_STMT
							(REGULAR_ASS
								(ID
									b
								)
								(INT
									7
								)
							)
						)
					)
				)
			)
			(IF-ELSE
				(>
					(ID
						a
					)
					(ID
						b
					)
				)
				(BLOCK
					(RET
						(+
							(ID
								b
							)
							(INT
								5
							)
						)
					)
				)
				(BLOCK
					(RET
						(*
							(ID
								a
							)
							(INT
								6
							)
						)
					)
				)
			)
			(RET
				(INT
					0
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(ASS_STMT
						(REGULAR_ASS
							(ID
								c
							)
							(INT
								0
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					c
				)
				(FUNC_CALL
					f1
				)
			)
		)
	)
)
======================================Processing tests/11nw.t======================================
IF-ELSE condition has to be bool type.
======================================Processing tests/11w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(ASS_STMT
						(REGULAR_ASS
							(ID
								a
							)
							(INT
								10
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						BOOL
						(ASS_STMT
							(REGULAR_ASS
								(ID
									check
								)
								(BOOL
									true
								)
							)
						)
					)
				)
			)
			(IF
				(==
					(ID
						a
					)
					(INT
						10
					)
				)
				(BLOCK
					(IF
						(ID
							check
						)
						(BLOCK
							(REGULAR_ASS
								(ID
									a
								)
								(INT
									2
								)
							)
						)
					)
				)
			)
		)
	)
)
======================================Processing tests/12nwdowhile.t======================================
DO WHILE condition has to be bool type.
======================================Processing tests/12nwfor.t======================================
FOR condition has to be bool type.
======================================Processing tests/12nwwhile.t======================================
WHILE condition has to be bool type.
======================================Processing tests/12wdowhile.t======================================
-OK-
(CODE
	(FUNC
		t
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					BOOL
					(ASS_STMT
						(REGULAR_ASS
							(ID
								t
							)
							(BOOL
								true
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						INT
						(ASS_STMT
							(REGULAR_ASS
								(ID
									c
								)
								(INT
									10
								)
							)
						)
					)
					(DECS
						(VAR_DEC
							INT
							(ASS_STMT
								(REGULAR_ASS
									(ID
										d
									)
									(INT
										100
									)
								)
							)
						)
					)
				)
			)
			(DO_WHILE
				(BLOCK
					(REGULAR_ASS
						(ID
							d
						)
						(-
							(ID
								d
							)
							(INT
								10
							)
						)
					)
					(IF
						(>
							(ID
								c
							)
							(ID
								d
							)
						)
						(BLOCK
							(REGULAR_ASS
								(ID
									t
								)
								(BOOL
									false
								)
							)
						)
					)
				)
				(ID
					t
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(FUNC_CALL
				(FUNC_CALL
					t
				)
			)
		)
	)
)
======================================Processing tests/12.wfor.t======================================
-OK-
(CODE
	(FUNC
		t
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					BOOL
					(ASS_STMT
						(REGULAR_ASS
							(ID
								p
							)
							(BOOL
								true
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						INT
						(ASS_STMT
							(REGULAR_ASS
								(ID
									a
								)
								(INT
									0
								)
							)
						)
					)
				)
			)
			(FOR
				(REGULAR_ASS
					(ID
						a
					)
					(INT
						10
					)
				)
				(ID
					p
				)
				(REGULAR_ASS
					(ID
						a
					)
					(+
						(ID
							a
						)
						(INT
							1
						)
					)
				)
				(BLOCK
					(IF
						(>
							(ID
								a
							)
							(*
								(INT
									10
								)
								(INT
									3
								)
							)
						)
						(BLOCK
							(REGULAR_ASS
								(ID
									p
								)
								(BOOL
									false
								)
							)
						)
					)
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(FUNC_CALL
				(FUNC_CALL
					t
				)
			)
		)
	)
)
======================================Processing tests/12wwhile.t======================================
-OK-
(CODE
	(FUNC
		t
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					BOOL
					(ASS_STMT
						(REGULAR_ASS
							(ID
								p
							)
							(BOOL
								true
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						INT
						(ASS_STMT
							(REGULAR_ASS
								(ID
									a
								)
								(INT
									7
								)
							)
						)
					)
					(DECS
						(VAR_DEC
							INT
							(ASS_STMT
								(REGULAR_ASS
									(ID
										b
									)
									(INT
										8
									)
								)
							)
						)
					)
				)
			)
			(WHILE
				(ID
					p
				)
				(BLOCK
					(IF
						(<
							(ID
								a
							)
							(ID
								b
							)
						)
						(BLOCK
							(REGULAR_ASS
								(ID
									p
								)
								(BOOL
									false
								)
							)
						)
					)
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(FUNC_CALL
				(FUNC_CALL
					t
				)
			)
		)
	)
)
======================================Processing tests/13nw.t======================================
ERROR: in operator [] can be  only Int type.
======================================Processing tests/13w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(STR_DEC
					(=
						str1
						(INT
							100
						)
						(STRING
							"TestingIndexType"
						)
					)
				)
				(DECS
					(VAR_DEC
						INT
						(ASS_STMT
							(REGULAR_ASS
								(ID
									k
								)
								(INT
									1
								)
							)
						)
					)
					(DECS
						(VAR_DEC
							BOOL
							(ASS_STMT
								(REGULAR_ASS
									(ID
										t
									)
									(BOOL
										true
									)
								)
							)
						)
					)
				)
			)
			(WHILE
				(ID
					t
				)
				(BLOCK
					(REGULAR_ASS
						(ID
							k
						)
						(*
							(ID
								k
							)
							(INT
								2
							)
						)
					)
					(STR_ASS
						(ID
							str1
						)
						(ID
							k
						)
						(CHAR
							'n'
						)
					)
					(IF
						(<
							(ID
								k
							)
							(*
								(INT
									6
								)
								(INT
									2
								)
							)
						)
						(BLOCK
							(REGULAR_ASS
								(ID
									t
								)
								(BOOL
									false
								)
							)
						)
					)
				)
			)
		)
	)
)
======================================Processing tests/14nw2.t======================================
ERROR: operator [] can be used only on String type.
======================================Processing tests/14nw.t======================================
ERROR: operator [] can be used only on String type.
======================================Processing tests/14w.t======================================
-OK-
(CODE
	(FUNC
		f1
		(PARAMS
			INT
			b
		)
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(STR_DEC
					(=
						str2
						(INT
							50
						)
						(STRING
							"OperatorTest"
						)
					)
				)
			)
			(STR_ASS
				(ID
					str2
				)
				(/
					(ID
						b
					)
					(INT
						2
					)
				)
				(CHAR
					'N'
				)
			)
			(RET
				(INT
					1
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(ASS_STMT
						(REGULAR_ASS
							(ID
								v1
							)
							(INT
								5
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						INT
						(ASS_STMT
							(REGULAR_ASS
								(ID
									v2
								)
								(FUNC_CALL
									f1
									(ID
										v1
									)
								)
							)
						)
					)
				)
			)
		)
	)
)
======================================Processing tests/15nw.t======================================
ERROR: you can't to enter REAL to INT type.
======================================Processing tests/15w1.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(ASS_STMT
						(REGULAR_ASS
							(ID
								a
							)
							(INT
								4
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						INT
						(ASS_STMT
							(REGULAR_ASS
								(ID
									b
								)
								(INT
									7
								)
							)
						)
					)
					(DECS
						(VAR_DEC
							INT
							(ASS_STMT
								(REGULAR_ASS
									(ID
										c
									)
									(+
										(ID
											a
										)
										(ID
											b
										)
									)
								)
							)
						)
						(DECS
							(VAR_DEC
								REAL
								(ASS_STMT
									(REGULAR_ASS
										(ID
											d
										)
										(REAL
											2.2
										)
									)
								)
							)
							(DECS
								(VAR_DEC
									REAL
									(ASS_STMT
										(REGULAR_ASS
											(ID
												e
											)
											(REAL
												3.1
											)
										)
									)
								)
								(DECS
									(VAR_DEC
										REAL
										(ASS_STMT
											(REGULAR_ASS
												(ID
													f
												)
												(ID
													e
												)
											)
										)
									)
									(DECS
										(VAR_DEC
											BOOL
											(ASS_STMT
												(REGULAR_ASS
													(ID
														c1
													)
													(BOOL
														true
													)
												)
											)
										)
										(DECS
											(VAR_DEC
												BOOL
												(ASS_STMT
													(REGULAR_ASS
														(ID
															c2
														)
														(ID
															c1
														)
													)
												)
											)
											(DECS
												(STR_DEC
													(=
														str1
														(INT
															10
														)
														(STRING
															"Testing.."
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(STR_ASS
				(ID
					str1
				)
				(INT
					2
				)
				(CHAR
					'T'
				)
			)
		)
	)
)
======================================Processing tests/15w2.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					P_CHAR
					(ASS_STMT
						(REGULAR_ASS
							(ID
								p
							)
							NULL
						)
					)
				)
				(DECS
					(VAR_DEC
						P_INT
						(ASS_STMT
							(REGULAR_ASS
								(ID
									c
								)
								NULL
							)
						)
					)
					(DECS
						(VAR_DEC
							P_REAL
							(ASS_STMT
								(REGULAR_ASS
									(ID
										d
									)
									NULL
								)
							)
						)
					)
				)
			)
		)
	)
)
======================================Processing tests/16a-nw.t======================================
ERROR, invalid ! to INT 
======================================Processing tests/16a-w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					REAL
					(ASS_STMT
						(REGULAR_ASS
							(ID
								c
							)
							(REAL
								94.95
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						INT
						(ASS_STMT
							(REGULAR_ASS
								(ID
									d
								)
								(INT
									77
								)
							)
							(VAR
								e
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(+
					(ID
						d
					)
					(ID
						e
					)
				)
			)
			(REGULAR_ASS
				(ID
					c
				)
				(+
					(ID
						c
					)
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					c
				)
				(+
					(ID
						c
					)
					(ID
						c
					)
				)
			)
		)
	)
)
======================================Processing tests/16b-nw.t======================================
ERROR, invalid |INT|(STR LEN) work only on string.
======================================Processing tests/16b-w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					BOOL
					(ASS_STMT
						(REGULAR_ASS
							(ID
								a
							)
							(BOOL
								true
							)
						)
						(ASS_STMT
							(REGULAR_ASS
								(ID
									b
								)
								(BOOL
									false
								)
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					a
				)
				(||
					(ID
						a
					)
					(ID
						b
					)
				)
			)
			(REGULAR_ASS
				(ID
					a
				)
				(&&
					(ID
						a
					)
					(ID
						b
					)
				)
			)
		)
	)
)
======================================Processing tests/16c-n.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					REAL
					(ASS_STMT
						(REGULAR_ASS
							(ID
								c
							)
							(REAL
								94.95
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						INT
						(VAR
							a
							(ASS_STMT
								(REGULAR_ASS
									(ID
										d
									)
									(INT
										77
									)
								)
							)
						)
					)
					(DECS
						(VAR_DEC
							BOOL
							(ASS_STMT
								(REGULAR_ASS
									(ID
										e
									)
									(BOOL
										true
									)
								)
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(<
					(ID
						c
					)
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(<
					(ID
						a
					)
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(<
					(ID
						c
					)
					(ID
						c
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(<=
					(ID
						c
					)
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(<=
					(ID
						a
					)
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(<=
					(ID
						c
					)
					(ID
						c
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(>
					(ID
						c
					)
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(>
					(ID
						a
					)
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(>
					(ID
						c
					)
					(ID
						c
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(>=
					(ID
						c
					)
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(>=
					(ID
						a
					)
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(>=
					(ID
						c
					)
					(ID
						c
					)
				)
			)
		)
	)
)
======================================Processing tests/16c-nw.t======================================
ERROR, invalid &&(LOGIC AND) to INT and INT
======================================Processing tests/16d-w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					CHAR
					(ASS_STMT
						(REGULAR_ASS
							(ID
								a
							)
							(CHAR
								'h'
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						REAL
						(ASS_STMT
							(REGULAR_ASS
								(ID
									b
								)
								(REAL
									94.95
								)
							)
						)
					)
					(DECS
						(VAR_DEC
							INT
							(ASS_STMT
								(REGULAR_ASS
									(ID
										c
									)
									(INT
										77
									)
								)
							)
						)
						(DECS
							(VAR_DEC
								P_CHAR
								(VAR
									d
								)
							)
							(DECS
								(VAR_DEC
									P_REAL
									(VAR
										e
									)
								)
								(DECS
									(VAR_DEC
										P_INT
										(VAR
											f
										)
									)
									(DECS
										(VAR_DEC
											BOOL
											(ASS_STMT
												(REGULAR_ASS
													(ID
														g
													)
													(BOOL
														true
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					g
				)
				(==
					(ID
						a
					)
					(ID
						a
					)
				)
			)
			(REGULAR_ASS
				(ID
					g
				)
				(==
					(ID
						b
					)
					(ID
						b
					)
				)
			)
			(REGULAR_ASS
				(ID
					g
				)
				(==
					(ID
						c
					)
					(ID
						c
					)
				)
			)
			(REGULAR_ASS
				(ID
					g
				)
				(==
					(ID
						d
					)
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					g
				)
				(==
					(ID
						e
					)
					(ID
						e
					)
				)
			)
			(REGULAR_ASS
				(ID
					g
				)
				(==
					(ID
						f
					)
					(ID
						f
					)
				)
			)
			(REGULAR_ASS
				(ID
					g
				)
				(!=
					(ID
						a
					)
					(ID
						a
					)
				)
			)
			(REGULAR_ASS
				(ID
					g
				)
				(!=
					(ID
						b
					)
					(ID
						b
					)
				)
			)
			(REGULAR_ASS
				(ID
					g
				)
				(!=
					(ID
						c
					)
					(ID
						c
					)
				)
			)
			(REGULAR_ASS
				(ID
					g
				)
				(!=
					(ID
						d
					)
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					g
				)
				(!=
					(ID
						e
					)
					(ID
						e
					)
				)
			)
			(REGULAR_ASS
				(ID
					g
				)
				(!=
					(ID
						f
					)
					(ID
						f
					)
				)
			)
		)
	)
)
======================================Processing tests/16e-w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(STR_DEC
					(=
						b
						(INT
							6
						)
						(STRING
							"abcdef"
						)
					)
				)
				(DECS
					(VAR_DEC
						INT
						(ASS_STMT
							(REGULAR_ASS
								(ID
									d
								)
								(INT
									77
								)
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					d
				)
				(STR_LEN
					(ID
						b
					)
				)
			)
		)
	)
)
======================================Processing tests/16f-w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					BOOL
					(ASS_STMT
						(REGULAR_ASS
							(ID
								e
							)
							(BOOL
								true
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(!
					(ID
						e
					)
				)
			)
			(REGULAR_ASS
				(ID
					e
				)
				(!
					((
						(<
							(INT
								5
							)
							(INT
								4
							)
						)
						)
					)
				)
			)
		)
	)
)
======================================Processing tests/17a-nw.t======================================
ERROR, invalid * to P_INT and INT
======================================Processing tests/17a-w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					CHAR
					(ASS_STMT
						(REGULAR_ASS
							(ID
								x
							)
							(CHAR
								'h'
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						INT
						(ASS_STMT
							(REGULAR_ASS
								(ID
									a
								)
								(INT
									19
								)
							)
						)
					)
					(DECS
						(VAR_DEC
							P_CHAR
							(VAR
								y
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					y
				)
				(ADDRESS
					(ID
						x
					)
				)
			)
			(REGULAR_ASS
				(ID
					y
				)
				(-
					((
						(+
							(+
								(ID
									y
								)
								(*
									(ID
										a
									)
									(INT
										17
									)
								)
							)
							(/
								(*
									(ID
										a
									)
									(INT
										5
									)
								)
								((
									(+
										(INT
											93
										)
										(INT
											17
										)
									)
									)
								)
							)
						)
						)
					)
					((
						(*
							(ID
								a
							)
							(INT
								5
							)
						)
						)
					)
				)
			)
		)
	)
)
======================================Processing tests/17b-nw.t======================================
ERROR, invalid * to P_CHAR and CHAR
======================================Processing tests/18a-nw.t======================================
ERROR, invalid &(addres) to P_INT.
======================================Processing tests/18a-w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					CHAR
					(ASS_STMT
						(REGULAR_ASS
							(ID
								a
							)
							(CHAR
								'h'
							)
						)
					)
				)
				(DECS
					(STR_DEC
						(=
							b
							(INT
								6
							)
							(STRING
								"abcdef"
							)
						)
					)
					(DECS
						(VAR_DEC
							REAL
							(ASS_STMT
								(REGULAR_ASS
									(ID
										c
									)
									(REAL
										94.95
									)
								)
							)
						)
						(DECS
							(VAR_DEC
								INT
								(ASS_STMT
									(REGULAR_ASS
										(ID
											d
										)
										(INT
											77
										)
									)
								)
							)
							(DECS
								(VAR_DEC
									BOOL
									(ASS_STMT
										(REGULAR_ASS
											(ID
												e
											)
											(BOOL
												true
											)
										)
									)
								)
								(DECS
									(VAR_DEC
										P_CHAR
										(VAR
											ap
										)
									)
									(DECS
										(VAR_DEC
											P_REAL
											(VAR
												cp
											)
										)
										(DECS
											(VAR_DEC
												P_INT
												(VAR
													dp
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					ap
				)
				(ADDRESS
					(ID
						a
					)
				)
			)
			(REGULAR_ASS
				(ID
					dp
				)
				(ADDRESS
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					ap
				)
				(ADDRESS
					(ID
						b
					)
					(IN_PLACE
						(INT
							1
						)
					)
				)
			)
		)
	)
)
======================================Processing tests/19a-nw.t======================================
ERROR, invalid *(pointer) to CHAR
======================================Processing tests/19a-w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					CHAR
					(ASS_STMT
						(REGULAR_ASS
							(ID
								a
							)
							(CHAR
								'h'
							)
						)
					)
				)
				(DECS
					(STR_DEC
						(=
							b
							(INT
								6
							)
							(STRING
								"abcdef"
							)
						)
					)
					(DECS
						(VAR_DEC
							REAL
							(ASS_STMT
								(REGULAR_ASS
									(ID
										c
									)
									(REAL
										94.95
									)
								)
							)
						)
						(DECS
							(VAR_DEC
								INT
								(ASS_STMT
									(REGULAR_ASS
										(ID
											d
										)
										(INT
											77
										)
									)
								)
							)
							(DECS
								(VAR_DEC
									BOOL
									(ASS_STMT
										(REGULAR_ASS
											(ID
												e
											)
											(BOOL
												true
											)
										)
									)
								)
								(DECS
									(VAR_DEC
										P_CHAR
										(VAR
											ap
										)
									)
									(DECS
										(VAR_DEC
											P_REAL
											(VAR
												cp
											)
										)
										(DECS
											(VAR_DEC
												P_INT
												(VAR
													dp
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					ap
				)
				(ADDRESS
					(ID
						a
					)
				)
			)
			(REGULAR_ASS
				(ID
					dp
				)
				(ADDRESS
					(ID
						d
					)
				)
			)
			(REGULAR_ASS
				(ID
					ap
				)
				(ADDRESS
					(ID
						b
					)
					(IN_PLACE
						(INT
							1
						)
					)
				)
			)
			(IF
				(==
					(PTR
						(ID
							ap
						)
					)
					(ID
						a
					)
				)
				(BLOCK
					(REGULAR_ASS
						(ID
							e
						)
						(BOOL
							false
						)
					)
				)
			)
		)
	)
)
======================================Processing tests/1a-nw.t======================================
ERROR : no main func.
======================================Processing tests/1a-w.t======================================
-OK-
(CODE
	(FUNC
		foo
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						x
					)
				)
			)
			(BLOCK
				(DECS
					(VAR_DEC
						INT
						(VAR
							y
						)
					)
				)
				(REGULAR_ASS
					(ID
						x
					)
					(INT
						1
					)
				)
				(REGULAR_ASS
					(ID
						y
					)
					(INT
						2
					)
				)
				(BLOCK
					(REGULAR_ASS
						(ID
							x
						)
						(INT
							2
						)
					)
				)
				(REGULAR_ASS
					(ID
						y
					)
					(INT
						3
					)
				)
			)
			(RET
				(INT
					0
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(BLOCK
				BLOCK
			)
		)
	)
)
======================================Processing tests/1b-nw.t======================================
Main function have to be at global scope
======================================Processing tests/1b-w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(BLOCK
				BLOCK
			)
		)
	)
	(FUNC
		foo
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						x
					)
				)
			)
			(BLOCK
				(DECS
					(VAR_DEC
						INT
						(VAR
							y
						)
					)
				)
				(REGULAR_ASS
					(ID
						x
					)
					(INT
						1
					)
				)
				(REGULAR_ASS
					(ID
						y
					)
					(INT
						2
					)
				)
				(BLOCK
					(REGULAR_ASS
						(ID
							x
						)
						(INT
							2
						)
					)
				)
				(REGULAR_ASS
					(ID
						y
					)
					(INT
						3
					)
				)
			)
			(RET
				(INT
					0
				)
			)
		)
	)
)
======================================Processing tests/1c-nw.t======================================
ERROR : no main func.
======================================Processing tests/1d-nw.t======================================
ERROR : no main func.
======================================Processing tests/2a-nw.t======================================
ERROR : main have to be void
======================================Processing tests/2a-w.t======================================
-OK-
(CODE
	(FUNC
		foo
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(RET
				(INT
					0
				)
			)
		)
	)
	(FUNC
		foo_2
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						a
					)
				)
			)
			(REGULAR_ASS
				(ID
					a
				)
				(INT
					2
				)
			)
			(RET
				(ID
					a
				)
			)
		)
	)
	(FUNC
		foo_3
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(IF
				(BOOL
					true
				)
				(BLOCK
					(RET
						(FUNC_CALL
							foo
						)
					)
				)
			)
			(RET
				(INT
					0
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						a
					)
				)
			)
			(REGULAR_ASS
				(ID
					a
				)
				(INT
					2
				)
			)
		)
	)
)
======================================Processing tests/2b-nw.t======================================
ERROR : main number of params have to be zero
======================================Processing tests/3-nw.t======================================
ERROR, func foo_2 already exist in scope
======================================Processing tests/3-w.t======================================
-OK-
(CODE
	(FUNC
		foo
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(RET
				(INT
					0
				)
			)
		)
	)
	(FUNC
		foo_2
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						a
					)
				)
			)
			(REGULAR_ASS
				(ID
					a
				)
				(INT
					2
				)
			)
			(RET
				(ID
					a
				)
			)
		)
	)
	(FUNC
		foo_3
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(FUNC_DEC
					(FUNC
						foo_2
						NONE PARAMS
						(TYPE 
							INT
						)
						(BLOCK
							(DECS
								(VAR_DEC
									INT
									(VAR
										a
									)
								)
							)
							(REGULAR_ASS
								(ID
									a
								)
								(INT
									2
								)
							)
							(RET
								(ID
									a
								)
							)
						)
					)
				)
			)
			(IF
				(BOOL
					true
				)
				(BLOCK
					(RET
						(FUNC_CALL
							foo
						)
					)
				)
			)
			(RET
				(FUNC_CALL
					foo_2
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						a
					)
				)
			)
			(REGULAR_ASS
				(ID
					a
				)
				(INT
					2
				)
			)
		)
	)
)
======================================Processing tests/4a-nw.t======================================
ERROR: identifier x alreary exist in current function.
======================================Processing tests/4a-w.t======================================
-OK-
(CODE
	(FUNC
		foo
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						x
					)
				)
				(DECS
					(VAR_DEC
						P_INT
						(VAR
							l
						)
					)
					(DECS
						(VAR_DEC
							P_CHAR
							(VAR
								k
							)
						)
						(DECS
							(STR_DEC
								(STRING
									y
									(INT
										10
									)
								)
							)
							(DECS
								(VAR_DEC
									CHAR
									(VAR
										z
									)
								)
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					x
				)
				(INT
					5
				)
			)
			(REGULAR_ASS
				(ID
					y
				)
				(STRING
					"foobar"
				)
			)
			(REGULAR_ASS
				(ID
					k
				)
				(ADDRESS
					(ID
						y
					)
					(IN_PLACE
						(INT
							5
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					z
				)
				(PTR
					(ID
						k
					)
					(INT
						5
					)
				)
			)
			(REGULAR_ASS
				(ID
					y
				)
				(STRING
					"barfoo"
				)
			)
			(RET
				(PTR
					(ID
						l
					)
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		BLOCK
	)
)
======================================Processing tests/4b-nw.t======================================
ERROR: identifier x alreary exist in current function.
======================================Processing tests/5a-nw.t======================================
ERROR: at function: foo20, function: foo43 didnt found.
you need to declare on function before you can use her.
======================================Processing tests/5b-nw.t======================================
ERROR: at function: foo1, function: foo2 didnt found.
you need to declare on function before you can use her.
======================================Processing tests/5-w.t======================================
-OK-
(CODE
	(FUNC
		foo1
		(PARAMS
			INT
			a b y
			CHAR
			c
		)
		(TYPE 
			BOOL
		)
		(BLOCK
			(DECS
				(VAR_DEC
					REAL
					(VAR
						s
					)
				)
				(DECS
					(VAR_DEC
						P_INT
						(ASS_STMT
							(REGULAR_ASS
								(ID
									k
								)
								NULL
							)
							(VAR
								m
							)
						)
					)
					(DECS
						(VAR_DEC
							INT
							(VAR
								g
								(VAR
									l
								)
							)
						)
						(DECS
							(VAR_DEC
								STRING
								(VAR
									p
								)
							)
							(DECS
								(VAR_DEC
									BOOL
									(ASS_STMT
										(REGULAR_ASS
											(ID
												res
											)
											(BOOL
												true
											)
										)
									)
								)
								(DECS
									(VAR_DEC
										P_CHAR
										(VAR
											f
											(VAR
												i
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					s
				)
				(REAL
					4.5
				)
			)
			(REGULAR_ASS
				(ID
					c
				)
				(PTR
					(ID
						f
					)
				)
			)
			(REGULAR_ASS
				(ID
					i
				)
				(-
					(ID
						f
					)
					(INT
						7
					)
				)
			)
			(REGULAR_ASS
				(ID
					c
				)
				(ID
					c
				)
			)
			(BLOCK
				(DECS
					(VAR_DEC
						CHAR
						(ASS_STMT
							(REGULAR_ASS
								(ID
									x
								)
								(CHAR
									'd'
								)
							)
							(VAR
								b
							)
						)
					)
					(DECS
						(VAR_DEC
							INT
							(VAR
								y
							)
						)
					)
				)
				(REGULAR_ASS
					(ID
						b
					)
					(CHAR
						'&'
					)
				)
				(REGULAR_ASS
					(ID
						a
					)
					(-
						(/
							((
								(*
									(ID
										y
									)
									(INT
										7
									)
								)
								)
							)
							(ID
								a
							)
						)
						(ID
							y
						)
					)
				)
				(REGULAR_ASS
					(ID
						res
					)
					(&&
						((
							(==
								(ID
									b
								)
								(ID
									c
								)
							)
							)
						)
						((
							(>
								(ID
									y
								)
								(ID
									a
								)
							)
							)
						)
					)
				)
			)
			(RET
				(ID
					res
				)
			)
		)
	)
	(FUNC
		fee1
		(PARAMS
			INT
			i j k x
		)
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(FUNC_DEC
					(FUNC
						fee2
						(PARAMS
							INT
							l m n
						)
						(TYPE 
							BOOL
						)
						(BLOCK
							(DECS
								(VAR_DEC
									BOOL
									(VAR
										x
										(VAR
											j
										)
									)
								)
								(DECS
									(VAR_DEC
										P_CHAR
										(VAR
											k
										)
									)
								)
							)
							(PTR_ASS
								(ID
									k
								)
								(CHAR
									'@'
								)
							)
							(REGULAR_ASS
								(ID
									i
								)
								(+
									(ID
										l
									)
									(ID
										l
									)
								)
							)
							(IF
								(||
									((
										(==
											(PTR
												(ID
													k
												)
											)
											(CHAR
												'*'
											)
										)
										)
									)
									(&&
										((
											(!=
												(BOOL
													false
												)
												(BOOL
													false
												)
											)
											)
										)
										((
											(<
												(+
													(ID
														l
													)
													(ID
														m
													)
												)
												(ID
													i
												)
											)
											)
										)
									)
								)
								(BLOCK
									(REGULAR_ASS
										(ID
											x
										)
										(<
											(ID
												l
											)
											(ID
												m
											)
										)
									)
								)
							)
							(RET
								(ID
									x
								)
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						BOOL
						(VAR
							ghgh
						)
					)
				)
			)
			(BLOCK
				(DECS
					(VAR_DEC
						CHAR
						(VAR
							x
						)
					)
					(DECS
						(VAR_DEC
							BOOL
							(ASS_STMT
								(REGULAR_ASS
									(ID
										k
									)
									(BOOL
										true
									)
								)
							)
						)
					)
				)
				(REGULAR_ASS
					(ID
						k
					)
					(FUNC_CALL
						foo1
						(ARGS
							(INT
								5
							)
							(ARGS
								(ID
									i
								)
								(ARGS
									(INT
										34
									)
									(ID
										x
									)
								)
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					x
				)
				(ID
					k
				)
			)
		)
	)
	(FUNC
		foo2
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(STR_DEC
					(=
						s1
						(INT
							100
						)
						(STRING
							"aba"
						)
						(STRING
							s2
							(INT
								3
							)
							(=
								s3
								(INT
									20
								)
								(STRING
									"4"
								)
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						INT
						(VAR
							i
							(ASS_STMT
								(REGULAR_ASS
									(ID
										j
									)
									(INT
										0
									)
								)
								(VAR
									cnt
								)
							)
						)
					)
					(DECS
						(STR_DEC
							(STRING
								a
								(INT
									30
								)
								(=
									b
									(INT
										100
									)
									(ID
										s3
									)
								)
							)
						)
						(DECS
							(VAR_DEC
								CHAR
								(VAR
									c
								)
							)
							(DECS
								(VAR_DEC
									INT
									(ASS_STMT
										(REGULAR_ASS
											(ID
												ds
											)
											(ID
												i
											)
										)
									)
								)
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					c
				)
				(CHAR
					'e'
				)
			)
			(STR_ASS
				(ID
					a
				)
				(INT
					19
				)
				(CHAR
					'f'
				)
			)
			(STR_ASS
				(ID
					a
				)
				(+
					(INT
						4
					)
					(INT
						2
					)
				)
				(CHAR
					'g'
				)
			)
			(REGULAR_ASS
				(ID
					b
				)
				(ID
					a
				)
			)
			(STR_ASS
				(ID
					b
				)
				(INT
					3
				)
				(ID
					c
				)
			)
			(REGULAR_ASS
				(ID
					a
				)
				(STRING
					"test"
				)
			)
			(REGULAR_ASS
				(ID
					i
				)
				(STR_LEN
					(ID
						b
					)
				)
			)
			(REGULAR_ASS
				(ID
					cnt
				)
				(INT
					1
				)
			)
			(FOR
				(REGULAR_ASS
					(ID
						i
					)
					(INT
						0
					)
				)
				(<
					(ID
						i
					)
					(STR_LEN
						(ID
							s1
						)
					)
				)
				(REGULAR_ASS
					(ID
						i
					)
					(+
						(ID
							i
						)
						(INT
							1
						)
					)
				)
				(BLOCK
					(DO_WHILE
						(BLOCK
							(IF
								(==
									(ID
										(ID
											s1
										)
										(IN_PLACE
											(ID
												i
											)
										)
									)
									(ID
										(ID
											s2
										)
										(IN_PLACE
											(ID
												j
											)
										)
									)
								)
								(REGULAR_ASS
									(ID
										cnt
									)
									(*
										(ID
											cnt
										)
										(INT
											2
										)
									)
								)
							)
							(REGULAR_ASS
								(ID
									j
								)
								(+
									(ID
										j
									)
									(INT
										1
									)
								)
							)
						)
						(&&
							(BOOL
								false
							)
							(BOOL
								true
							)
						)
					)
					(REGULAR_ASS
						(ID
							j
						)
						(*
							(ID
								i
							)
							(INT
								2
							)
						)
					)
				)
			)
			(RET
				(ID
					cnt
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						a
					)
				)
			)
			(REGULAR_ASS
				(ID
					a
				)
				(FUNC_CALL
					foo2
				)
			)
		)
	)
	(FUNC
		foo4
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DO_WHILE
				(BLOCK
					(DECS
						(VAR_DEC
							INT
							(VAR
								j
							)
						)
					)
					(REGULAR_ASS
						(ID
							j
						)
						(+
							(ID
								j
							)
							(INT
								1
							)
						)
					)
				)
				(BOOL
					true
				)
			)
			(BLOCK
				(DECS
					(VAR_DEC
						INT
						(VAR
							x
							(VAR
								k
							)
						)
					)
					(DECS
						(VAR_DEC
							P_INT
							(VAR
								y
							)
						)
					)
				)
				(REGULAR_ASS
					(ID
						x
					)
					(INT
						5
					)
				)
				(REGULAR_ASS
					(ID
						y
					)
					(ADDRESS
						(ID
							x
						)
					)
				)
				(REGULAR_ASS
					(ID
						x
					)
					(INT
						6
					)
				)
				(IF
					(&&
						(==
							(ADDRESS
								(ID
									x
								)
							)
							(ID
								y
							)
						)
						(==
							(PTR
								(ID
									y
								)
							)
							(ID
								x
							)
						)
					)
					(PTR_ASS
						(ID
							y
						)
						(INT
							9
						)
					)
				)
				(BLOCK
					(DECS
						(VAR_DEC
							P_CHAR
							(VAR
								x
							)
						)
						(DECS
							(STR_DEC
								(STRING
									y
									(INT
										10
									)
								)
							)
							(DECS
								(VAR_DEC
									CHAR
									(VAR
										z
									)
								)
							)
						)
					)
					(REGULAR_ASS
						(ID
							y
						)
						(STRING
							"foobar"
						)
					)
					(REGULAR_ASS
						(ID
							x
						)
						(ADDRESS
							(ID
								y
							)
							(IN_PLACE
								(+
									(*
										(INT
											5
										)
										(INT
											3
										)
									)
									(*
										(INT
											5
										)
										(ID
											k
										)
									)
								)
							)
						)
					)
					(REGULAR_ASS
						(ID
							z
						)
						(PTR
							(ID
								x
							)
							(INT
								5
							)
						)
					)
					(REGULAR_ASS
						(ID
							y
						)
						(STRING
							"barfoo"
						)
					)
				)
			)
			(RET
				(INT
					0
				)
			)
		)
	)
	(FUNC
		foo10
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(FUNC_DEC
					(FUNC
						foo20
						NONE PARAMS
						(TYPE 
							INT
						)
						BLOCK
					)
				)
				(DECS
					(FUNC_DEC
						(FUNC
							foo30
							NONE PARAMS
							(TYPE 
								INT
							)
							BLOCK
						)
					)
					(DECS
						(FUNC_DEC
							(FUNC
								foo40
								NONE PARAMS
								(TYPE 
									INT
								)
								(BLOCK
									(DECS
										(FUNC_DEC
											(FUNC
												foo41
												NONE PARAMS
												(TYPE 
													INT
												)
												(BLOCK
													(DECS
														(VAR_DEC
															CHAR
															(VAR
																i
															)
														)
													)
												)
											)
										)
										(DECS
											(FUNC_DEC
												(FUNC
													foo42
													NONE PARAMS
													(TYPE 
														BOOL
													)
													(BLOCK
														(DECS
															(VAR_DEC
																INT
																(VAR
																	i
																	(VAR
																		j
																		(VAR
																			k
																			(VAR
																				x
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
											(DECS
												(FUNC_DEC
													(FUNC
														foo43
														NONE PARAMS
														(TYPE 
															VOID
														)
														(BLOCK
															(DECS
																(VAR_DEC
																	INT
																	(VAR
																		i
																		(VAR
																			j
																			(VAR
																				k
																				(VAR
																					x
																					(VAR
																						l
																						(VAR
																							m
																						)
																					)
																				)
																			)
																		)
																	)
																)
																(DECS
																	(VAR_DEC
																		BOOL
																		(VAR
																			df
																		)
																	)
																)
															)
															(IF
																(==
																	(FUNC_CALL
																		fee1
																		(ARGS
																			(ID
																				i
																			)
																			(ARGS
																				(ID
																					j
																				)
																				(ARGS
																					(ID
																						k
																					)
																					(ID
																						x
																					)
																				)
																			)
																		)
																	)
																	(FUNC_CALL
																		foo43
																	)
																)
																(BLOCK
																	(REGULAR_ASS
																		(ID
																			df
																		)
																		(<
																			(ID
																				l
																			)
																			(ID
																				m
																			)
																		)
																	)
																)
															)
														)
													)
												)
											)
										)
									)
								)
							)
						)
					)
				)
			)
		)
	)
)
======================================Processing tests/6a-w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						i
					)
				)
			)
			(IF
				(>
					(INT
						3
					)
					(INT
						2
					)
				)
				(BLOCK
					(REGULAR_ASS
						(ID
							i
						)
						(INT
							5
						)
					)
				)
			)
		)
	)
)
======================================Processing tests/6b-w.t======================================
-OK-
(CODE
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(IF
				(>
					(INT
						3
					)
					(INT
						2
					)
				)
				(BLOCK
					(DECS
						(VAR_DEC
							INT
							(VAR
								i
							)
						)
					)
					(REGULAR_ASS
						(ID
							i
						)
						(INT
							5
						)
					)
				)
			)
		)
	)
)
======================================Processing tests/6-nw.t======================================
ERROR :var i dont exist in scope: main
======================================Processing tests/7-nw.t======================================
func name: foo
num of params: 3
num of args: 4
ERROR : num of params didnt match to num of args
======================================Processing tests/7-w.t======================================
-OK-
(CODE
	(FUNC
		foo
		(PARAMS
			INT
			a b c
		)
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						x
					)
				)
			)
			(BLOCK
				(DECS
					(VAR_DEC
						INT
						(VAR
							y
						)
					)
				)
				(REGULAR_ASS
					(ID
						x
					)
					(INT
						1
					)
				)
				(REGULAR_ASS
					(ID
						y
					)
					(INT
						2
					)
				)
				(BLOCK
					(REGULAR_ASS
						(ID
							x
						)
						(INT
							2
						)
					)
				)
				(REGULAR_ASS
					(ID
						y
					)
					(INT
						3
					)
				)
			)
			(RET
				(INT
					0
				)
			)
		)
	)
	(FUNC
		foo2
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						a
						(VAR
							b
							(VAR
								c
								(VAR
									d
									(VAR
										e
									)
								)
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					a
				)
				(FUNC_CALL
					foo
					(ARGS
						(ID
							a
						)
						(ARGS
							(ID
								b
							)
							(ID
								c
							)
						)
					)
				)
			)
			(BLOCK
				BLOCK
			)
			(RET
				(INT
					0
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		BLOCK
	)
)
======================================Processing tests/8-a-nw.t======================================
arg type(CHAR) didnt match to param type(INT).
 ======================================Processing tests/8-w.t======================================
-OK-
(CODE
	(FUNC
		foo
		(PARAMS
			INT
			a b
			CHAR
			j
		)
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						x
					)
				)
			)
			(BLOCK
				(DECS
					(VAR_DEC
						INT
						(VAR
							y
						)
					)
				)
				(REGULAR_ASS
					(ID
						x
					)
					(INT
						1
					)
				)
				(REGULAR_ASS
					(ID
						y
					)
					(INT
						2
					)
				)
				(BLOCK
					(REGULAR_ASS
						(ID
							x
						)
						(INT
							2
						)
					)
				)
				(REGULAR_ASS
					(ID
						y
					)
					(INT
						3
					)
				)
			)
			(RET
				(INT
					0
				)
			)
		)
	)
	(FUNC
		foo2
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(VAR
						a
						(VAR
							b
							(VAR
								c
							)
						)
					)
				)
				(DECS
					(VAR_DEC
						CHAR
						(VAR
							d
							(VAR
								e
							)
						)
					)
				)
			)
			(REGULAR_ASS
				(ID
					a
				)
				(FUNC_CALL
					foo
					(ARGS
						(ID
							a
						)
						(ARGS
							(ID
								b
							)
							(ID
								e
							)
						)
					)
				)
			)
			(BLOCK
				BLOCK
			)
			(RET
				(INT
					0
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		BLOCK
	)
)
======================================Processing tests/9nw2.t======================================
ERROR: function smt can not return string
======================================Processing tests/9nw.t======================================
ERROR: function foo declare return INT but return CHAR.
======================================Processing tests/9w.t======================================
-OK-
(CODE
	(FUNC
		foo
		NONE PARAMS
		(TYPE 
			INT
		)
		(BLOCK
			(DECS
				(VAR_DEC
					INT
					(ASS_STMT
						(REGULAR_ASS
							(ID
								a
							)
							(INT
								10
							)
						)
					)
				)
			)
			(IF
				(==
					(ID
						a
					)
					(INT
						10
					)
				)
				(BLOCK
					(REGULAR_ASS
						(ID
							a
						)
						(+
							(ID
								a
							)
							(INT
								1
							)
						)
					)
				)
			)
			(RET
				(ID
					a
				)
			)
		)
	)
	(FUNC
		main
		NONE PARAMS
		(TYPE 
			VOID
		)
		(BLOCK
			(FUNC_CALL
				(FUNC_CALL
					foo
				)
			)
		)
	)
)
